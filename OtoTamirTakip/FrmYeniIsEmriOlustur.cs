using DevExpress.XtraEditors;
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using OtoTamirTakip.Context;
using OtoTamirTakip.DAL;
using OtoTamirTakip.Entities;
using OtoTamirTakip.Tools;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace OtoTamirTakip
{
	public partial class FrmYeniIsEmriOlustur : DevExpress.XtraEditors.XtraForm
	{
		int siraNo = 1;
		public List<UserControl1> userControls = new List<UserControl1>();

		public decimal toplamTutar = 0m;
		string ısEmriNo = "";


		OtoTamirTakipContext context = new OtoTamirTakipContext();
		List<IsEmirDetay> ısEmirDetays = new List<IsEmirDetay>();

		IsEmirDetayDAL ısEmirDetayDAL = new IsEmirDetayDAL();
		IsEmriDAL ısEmriDAL = new IsEmriDAL();
		MusteriDAL musteriDAL = new MusteriDAL();
		AracDAL aracDAL = new AracDAL();
		public FrmYeniIsEmriOlustur()
		{
			InitializeComponent();
			// This line of code is generated by Data Source Configuration Wizard
			// Create a new DataSet
			System.Data.DataSet xmlDataSet = new System.Data.DataSet("XML DataSet");
			// Load the XML document to the DataSet
			//xmlDataSet.ReadXml(@"C:\Users\kursa\source\repos\OtoTamirTakip\OtoTamirTakip\Line1.xsd");
			// This line of code is generated by Data Source Configuration Wizard
			//gridControl1.DataSource = xmlDataSet.Tables["DataTable1"];

		}
		IsEmirDetay ısEmirDetay = new IsEmirDetay();
		private void FrmYeniIsEmriOlustur_Load(object sender, EventArgs e)
		{
			int isEmriSayisi = context.IsEmirleri.ToList().Count + 1;
			ısEmriNo = "0000000000" + isEmriSayisi.ToString();
			txtIsEmriNo.Text = ısEmriNo;
			IsEmirDetay ısEmirDetay = new IsEmirDetay();
			cmbOdeme.SelectedIndex = 0;
			gridLookUpIsım.Properties.DataSource = context.Musteriler.Where(q => q.Kullanimdami == true).ToList();

			dataGridView1.Rows[0].Cells["rowSiraNo"].Value = siraNo;
			dataGridView1.Rows[0].Cells["rowAdet"].Value = 1;
			dataGridView1.Rows[0].Cells["rowBirimFiyat"].Value = 0;
			siraNo++;
			
		}

		private void gridLookUpIsım_EditValueChanged_1(object sender, EventArgs e)
		{
			int secilenMusteriID = Convert.ToInt32(gridLookUpIsım.EditValue);
			Musteri musteri = musteriDAL.GetByFilter(context, q => q.ID == secilenMusteriID);
			gridLookUpPlakaNo.Properties.DataSource = context.Araclar.Where(q => q.MusteriID == secilenMusteriID && q.Kullanimdami==true).ToList();
			txtTcNo.Text = musteri.TcNo;
			txtAdres.Text = musteri.Adres;
			txtTelNo.Text = musteri.Tel;
			txtEPosta.Text = musteri.Mail;

		}

		private void gridLookUpPlakaNo_EditValueChanged(object sender, EventArgs e)
		{
			int secilenAracID = Convert.ToInt32(gridLookUpPlakaNo.EditValue);
			Arac arac = aracDAL.GetByFilter(context, q => q.ID == secilenAracID);
			txtAracTipi.Text = arac.AracTipi;
			txtAracModel.Text = arac.AracModel;
			txtRenk.Text = arac.Renk;
			txtSaseNo.Text = arac.SaseNo;
		}



		private void dataGridView1_RowsAdded(object sender, DataGridViewRowsAddedEventArgs e)
		{

		}

		private void dataGridView1_NewRowNeeded(object sender, DataGridViewRowEventArgs e)
		{

		}

		private void dataGridView1_CellValueChanged(object sender, DataGridViewCellEventArgs e)
		{
			if (e.RowIndex > -1)
			{
				if (e.ColumnIndex == 2 || e.ColumnIndex == 4)
				{
					decimal tutari = Convert.ToDecimal(dataGridView1.Rows[e.RowIndex].Cells[2].Value) * Convert.ToDecimal(dataGridView1.Rows[e.RowIndex].Cells[4].Value);
					dataGridView1.Rows[e.RowIndex].Cells[5].Value = tutari;
					Hesapla();
				}
			}
		}
		public void Hesapla()
		{
			toplamTutar = 0;
			for (int i = 0; i < dataGridView1.Rows.Count; i++)
			{
				toplamTutar += Convert.ToDecimal(dataGridView1.Rows[i].Cells[5].Value);
			}
			txtToplamTutar.Text = toplamTutar.ToString();
		}
		private void button1_Click(object sender, EventArgs e)
		{
			if (!string.IsNullOrEmpty(gridLookUpIsım.Text) && !string.IsNullOrEmpty(gridLookUpPlakaNo.Text) && !string.IsNullOrEmpty(txtAracKM.Text))
			{
				int sayac = 0;

				for (int i = 0; i < dataGridView1.Rows.Count - 1; i++)
				{
					if (dataGridView1.Rows[i].Cells["rowParcaAdi"].Value != null)
					{
						sayac++;
					}
				}
				if (sayac == dataGridView1.Rows.Count - 1)
				{
					IsEmri ısEmri = new IsEmri();
					ısEmri.MusteriID = Convert.ToInt32(gridLookUpIsım.EditValue);
					ısEmri.AracID = Convert.ToInt32(gridLookUpPlakaNo.EditValue);
					Arac arac = aracDAL.GetByFilter(context, q => q.ID == ısEmri.AracID);
					ısEmri.Arac = arac;
					ısEmri.Arac.GarantiBaslangic = dtGarantiBaslangic.Value;
					ısEmri.AracKM = txtAracKM.Text;
					ısEmri.GelisTarihi = dtGelis.Value;
					ısEmri.BaslamaTarihi = dtBaslama.Value;
					ısEmri.TeslimTarihi = dtTeslim.Value;
					ısEmri.OdemeSekli = cmbOdeme.Text;
					ısEmri.IsEmriNo = ısEmriNo;
					ısEmri.Kasko = chcKasko.Checked;
					ısEmri.Trafik = chcTrafik.Checked;
					ısEmri.MusOd = chcMusOd.Checked;
					ısEmri.ToplamTutar = toplamTutar;
					List<IsEmirDetay> ısEmirDetays = new List<IsEmirDetay>();

					for (int i = 0; i < sayac; i++)
					{
						IsEmirDetay ısEmirDetay = new IsEmirDetay();
						ısEmirDetay.SiraNo = dataGridView1.Rows[i].Cells["rowSiraNo"].Value.ToString();
						ısEmirDetay.Adet = Convert.ToInt32(dataGridView1.Rows[i].Cells["rowAdet"].Value);
						ısEmirDetay.ParcaAdi = dataGridView1.Rows[i].Cells["rowParcaAdi"].Value.ToString();
						ısEmirDetay.BirimFiyat = Convert.ToDecimal(dataGridView1.Rows[i].Cells["rowBirimFiyat"].Value);
						ısEmirDetay.Tutari = Convert.ToDecimal(dataGridView1.Rows[i].Cells["rowTutari"].Value);
						ısEmirDetay.IsEmriNo = ısEmriNo;
						ısEmirDetay.IsEmri = ısEmri;
						ısEmirDetay.IsEmirID = ısEmirDetay.IsEmri.ID;
						ısEmirDetays.Add(ısEmirDetay);

					}
					//burada ısemri object.
					//ısmeri.emirdetayı= ısEmirdetay.
					//ısEmri.IsEmirDetaylari = ısEmirDetays;
					ısEmriDAL.Add(context, ısEmri);
					ısEmriDAL.Save(context);
					foreach (var item in ısEmirDetays)
					{
						ısEmirDetayDAL.Add(context, item);
						ısEmirDetayDAL.Save(context);
					}


					MessageBox.Show("İş Emri Kaydedildi");
					CustomTool.RaporOlustur(context, ısEmriNo, FrmMain.dosyaadi, FrmMain.report, musteriDAL, aracDAL);
					CustomTool.RaporYazdir(FrmMain.report);
					this.Close();
				}
				else
				{
					MessageBox.Show("Parça Adı Boş Geçilemez");
				}
			}
			else
			{
				MessageBox.Show("Müşteri,Plaka No ve Araç KM Boş Geçilemez");
			}
			
		}

		private void dataGridView1_UserAddedRow(object sender, DataGridViewRowEventArgs e)
		{
			dataGridView1.Rows[e.Row.Index].Cells["rowSiraNo"].Value = siraNo;
			dataGridView1.Rows[e.Row.Index].Cells["rowAdet"].Value = 1;
			dataGridView1.Rows[e.Row.Index].Cells["rowBirimFiyat"].Value = 0;
			siraNo++;
		}

		private void dataGridView1_UserDeletedRow(object sender, DataGridViewRowEventArgs e)
		{
			Hesapla();
			siraNo--;
			for (int i = 0; i < dataGridView1.Rows.Count; i++)
			{
				dataGridView1.Rows[i].Cells["rowSiraNo"].Value = i + 1;
			}
		}
	}
}